name: Deploy Backend to EC2

on:
  push:
    branches: [ main, feature/backend ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy backend to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: 44.214.236.166
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # 백엔드 디렉토리로 이동 (없으면 생성)
          mkdir -p /home/ec2-user/nutrition-backend
          cd /home/ec2-user/nutrition-backend
          
          # 기존 프로세스 종료
          pkill -f "node.*app.js" || true
          
          # .env 파일 백업 (있다면)
          if [ -f "backend/.env" ]; then
            cp backend/.env /tmp/backend.env.backup
          fi
          
          # Git 저장소 초기화 또는 업데이트
          if [ ! -d ".git" ]; then
            git clone -b feature/backend https://github.com/Hayoung5/FizzBuzz_Eaten.git .
          else
            git fetch origin
            git checkout feature/backend
            git pull origin feature/backend
          fi
          
          # .env 파일 복원
          if [ -f "/tmp/backend.env.backup" ]; then
            cp /tmp/backend.env.backup backend/.env
          elif [ ! -f "backend/.env" ]; then
            # .env 파일이 없으면 생성
            cat > backend/.env << 'EOF'
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=
DB_NAME=fizzbuzz_eaten
PORT=3000
AI_SERVER_URL=http://localhost:5000
KAKAO_CLIENT_ID=7d4739c2c9d0bd6ea1beba2d0e575633
JWT_SECRET=f90a75a17b7fcb9ceba479e509d100e6fbacfb2a7a888f5d961f4107b2fd66fb5605b4515ff8e206547c4db367e020bd3b21d7a7102f0cc72823a7093f07961d
EOF
          fi
          
          # Node.js 환경 설정
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
          
          # 의존성 설치
          cd backend
          npm install
          
          # 백엔드 서버 실행
          nohup npm start > ../backend.log 2>&1 &
          
          # 프로세스 확인
          sleep 5
          ps aux | grep node | grep -v grep
          
          echo "Backend deployment completed"
          
          # 서버 상태 확인
          curl -I http://localhost:3000 || echo "Server not responding yet"