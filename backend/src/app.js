/**
 * Î©îÏù∏ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò ÌååÏùº
 * - Express ÏÑúÎ≤Ñ ÏÑ§Ï†ï Î∞è ÏãúÏûë
 * - ÎØ∏Îì§Ïõ®Ïñ¥ Îì±Î°ù
 * - ÎùºÏö∞Ìä∏ Ïó∞Í≤∞
 * - Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÌôïÏù∏
 */

require('dotenv').config(); // ÌôòÍ≤ΩÎ≥ÄÏàòÎ•º Í∞ÄÏû• Î®ºÏ†Ä Î°úÎìú

const express = require('express');
const cors = require('cors');
const session = require('express-session');
const passport = require('./config/passport');
const { testConnection } = require('./config/database');
const userRoutes = require('./routes/userRoutes');
const photoRoutes = require('./routes/photoRoutes');
const statsRoutes = require('./routes/statsRoutes');
const authRoutes = require('./routes/authRoutes');

const app = express();
const PORT = process.env.PORT || 3000;

// ÎØ∏Îì§Ïõ®Ïñ¥ ÏÑ§Ï†ï
app.use(cors()); // CORS ÌóàÏö©
app.use(express.json()); // JSON ÌååÏã±

// ÏÑ∏ÏÖò ÏÑ§Ï†ï
app.use(session({
  secret: process.env.JWT_SECRET || 'fallback-secret',
  resave: false,
  saveUninitialized: false,
  cookie: { secure: false } // HTTPSÏóêÏÑúÎäî trueÎ°ú ÏÑ§Ï†ï
}));

// Passport Ï¥àÍ∏∞Ìôî
app.use(passport.initialize());
app.use(passport.session());

// API ÎùºÏö∞Ìä∏ Ïó∞Í≤∞
app.use('/api', userRoutes);    // ÏÇ¨Ïö©Ïûê Í¥ÄÎ†® API
app.use('/api', photoRoutes);   // ÏÇ¨ÏßÑ Î∂ÑÏÑù API
app.use('/api', statsRoutes);   // ÌÜµÍ≥Ñ/Î¶¨Ìè¨Ìä∏ API
app.use('/api/auth', authRoutes); // Ïù∏Ï¶ù API

// Ìó¨Ïä§Ï≤¥ÌÅ¨ ÏóîÎìúÌè¨Ïù∏Ìä∏
app.get('/health', async (req, res) => {
  const dbStatus = await testConnection();
  res.json({
    status: 'ok',
    database: dbStatus ? 'connected' : 'disconnected',
    timestamp: new Date().toISOString()
  });
});

// Î°úÍ∑∏ ÌôïÏù∏ ÏóîÎìúÌè¨Ïù∏Ìä∏
app.get('/logs', (req, res) => {
  const logger = require('./src/middleware/logger');
  const lines = parseInt(req.query.lines) || 50;
  const logs = logger.getLogs(lines);
  res.json({ logs, total: logs.length });
});

// ÏÑúÎ≤Ñ ÏãúÏûë
const startServer = async () => {
  try {
    // Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÌôïÏù∏
    await testConnection();
    
    app.listen(PORT, () => {
      console.log(`üöÄ Server running on port ${PORT}`);
      console.log(`üìã Available endpoints:`);
      console.log(`   - GET  /api/user_info/:id`);
      console.log(`   - POST /api/user_info`);
      console.log(`   - POST /api/photo_analy`);
      console.log(`   - GET  /api/statistics`);
      console.log(`   - GET  /api/report`);
      console.log(`   - GET  /api/meal_reco`);
      console.log(`   - GET  /api/auth/kakao`);
      console.log(`   - GET  /api/auth/me`);
    });
  } catch (error) {
    console.error('‚ùå Server startup failed:', error.message);
    process.exit(1);
  }
};

startServer();

module.exports = app;
